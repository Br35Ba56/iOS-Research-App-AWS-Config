AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  NFP Breastfeeding SAM

Globals:
  Function:
    Timeout: 20

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: NFPBreastFeedingAPI
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0.0"
          title: "NFP Breast Feeding API"
        basePath: "/NFPBreastFeedingAPI"
        schemes:
        - "https"
        paths:
          /surveys/weeklysurvey:
            put:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              parameters:
              - in: "body"
                name: "survey"
                required: true
                schema:
                  $ref: "#/definitions/weeklysurvey"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "500":
                  description: "500 response"
                  schema:
                    $ref: "#/definitions/Error"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "400":
                  description: "400 response"
                  schema:
                    $ref: "#/definitions/Error"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
              x-amazon-apigateway-request-validator: "Validate body"
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:551307643672:function:${UploadSurveyFunction}/invocations"
                responses:
                  BAD.*:
                    statusCode: "400"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                  INT.*:
                    statusCode: "500"
                    responseParamters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws"
          /surveys/dailysurvey:
            put:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              parameters:
              - in: "body"
                name: "survey"
                required: true
                schema:
                  $ref: "#/definitions/dailysurvey"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "500":
                  description: "500 response"
                  schema:
                    $ref: "#/definitions/Error"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "400":
                  description: "400 response"
                  schema:
                    $ref: "#/definitions/Error"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
              x-amazon-apigateway-request-validator: "Validate body"
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:551307643672:function:${UploadSurveyFunction}/invocations"
                responses:
                  BAD.*:
                    statusCode: "400"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                  INT.*:
                    statusCode: "500"
                    responseParamters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws"
          /cognito/disableuser:
            post:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              parameters:
              - in: "body"
                name: "cognitouser"
                required: true
                schema:
                  $ref: "#/definitions/cognitouser"
              responses:
                "200":
                  description: "200 response"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "400":
                  description: "400 response"
                  schema:
                    $ref: "#/definitions/Error"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "500":
                  description: "500 response"
                  schema:
                    $ref: "#/definitions/Error"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
              x-amazon-apigateway-request-validator: "Validate body"
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:551307643672:function:${DisableUserFunction}/invocations"
                responses:
                  BAD.*:
                    statusCode: "400"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                  INT.*:
                    statusCode: "500"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws"
        definitions:
          Error:
            properties:
              code:
                type: "integer"
                format: "int32"
              fields:
                type: "string"
              message:
                type: "string"
          cognitouser:
            type: "object"
            properties:
              userpool:
                type: "string"
              username:
                type: "string"
            title: "Cognito Disable User"
          dailysurvey:
            type: object
            properties: 
              type: 
                type: string
              userName: 
                type: string
              date: 
                type: string
              clearBlueMonitor: 
                type: string
              experienceBleeding:
                type: string
              menstruation:
                type: string
              progesterone:
                type: string
              numOfTimesBabyBreastFed:
                type: string
              numOfTimesBabyExpressFed:
                type: string
              numOfTimesBabyFormulaFed:
                type: string
            required: 
            - type
            - userName
            - date
            - clearBlueMonitor
            - experienceBleeding
            - menstruation
            - progesterone
            - numOfTimesBabyBreastFed
            - numOfTimesBabyExpressFed
            - numOfTimesBabyFormulaFed
          weeklysurvey:
            type: object
            properties: 
              type: 
                type: string
              userName: 
                type: string
              date: 
                type: string
              areYouPregnant:
                type: string
              didMenstruateThisWeek:
                type: string
              recentlyDiagnosed:
                type: string
              stillBreastfeeding:
                type: string
              usedAnyContraceptives:
                type: string
            required: 
            - type
            - userName
            - date
            - areYouPregnant
            - didMenstruateThisWeek
            - recentlyDiagnosed
            - stillBreastfeeding
            - usedAnyContraceptives
        x-amazon-apigateway-request-validators:
          Validate body:
            validateRequestParameters: false
            validateRequestBody: true
  SurveyTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "UserName"
          AttributeType: "S"
        - 
          AttributeName: "Date"
          AttributeType: "S"
      KeySchema:
        - 
          AttributeName: "UserName"
          KeyType: "HASH"
        - 
          AttributeName: "Date"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"

  DisableUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/NFPBreastFeedingLambdaFunctions-1.0.0.jar
      Handler: nfpbreastfeedinglambdas.cognitouserdisable.DisableUserHandler::handleRequest
      Runtime: java8
      Role: !GetAtt IAMDisableUserFunctionRole.Arn
      Events:
        disableuser:
          Type: Api
          Properties:
            Path: /cognito/disableuser
            Method: POST
            RestApiId: !Ref Api
  UploadSurveyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: target/NFPBreastfeedingLambdaFunctions-1.0.0.jar
      Handler: nfpbreastfeedinglambdas.dynamodbuploadsurveys.UploadSurveyHandler::handleRequest
      Runtime: java8
      Role: !GetAtt IAMUploadSurveyRole.Arn
      Events:
        uploadsurvey:
          Type: Api
          Properties:
            Path: /surveys/*
            Method: PUT
            RestApiId: !Ref Api
  IAMUploadSurveyRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "UploadSurveyToDynamoDb"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "dynamodb:PutItem" 
                Resource: !GetAtt SurveyTable.Arn
        - PolicyName: "LambdaBasicExecutionRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: 
                 - "logs:CreateLogGroup"
                 - "logs:CreateLogStream"
                 - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  IAMDisableUserFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - 
            Effect: "Allow"
            Principal: 
              Service: lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "DisableCognitoUser"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "cognito-idp:AdminDisableUser"
                Resource: "arn:aws:cognito-idp:us-east-1:*:userpool/*"
        - PolicyName: "LambdaBasicExecutionRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: 
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

            
Outputs:
  NFPBreastFeedingApi:
    Description: "API Gateway endpoint URL for Dev stage for Disable User Function"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Dev/cognito/disableuser"

  DisableUserFunction:
    Description: "Disable User Function ARN"
    Value: !GetAtt DisableUserFunction.Arn

  DisableUserFunctionIamRole:
    Description: "Implicit IAM Role created for Disable User function"
    Value: !GetAtt DisableUserFunction.Arn
