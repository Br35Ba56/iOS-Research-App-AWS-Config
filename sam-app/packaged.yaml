AWSTemplateFormatVersion: '2010-09-09'
Description: 'NFP Breastfeeding SAM

  '
Globals:
  Function:
    Timeout: 20
Outputs:
  DisableUserFunction:
    Description: Disable User Function ARN
    Value:
      Fn::GetAtt:
      - DisableUserFunction
      - Arn
  DisableUserFunctionIamRole:
    Description: Implicit IAM Role created for Disable User function
    Value:
      Fn::GetAtt:
      - DisableUserFunction
      - Arn
  NFPBreastFeedingApi:
    Description: API Gateway endpoint URL for Dev stage for Disable User Function
    Value:
      Fn::Sub: https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Dev/cognito/disableuser
Resources:
  Api:
    Properties:
      DefinitionBody:
        basePath: /NFPBreastFeedingAPI
        definitions:
          Error:
            properties:
              code:
                format: int32
                type: integer
              fields:
                type: string
              message:
                type: string
          cognitouser:
            properties:
              username:
                type: string
              userpool:
                type: string
            title: Cognito Disable User
            type: object
        info:
          title: NFP Breast Feeding API
          version: 1.0.0
        paths:
          /cognito/disableuser:
            post:
              consumes:
              - application/json
              parameters:
              - in: body
                name: cognitouser
                required: true
                schema:
                  $ref: '#/definitions/cognitouser'
              produces:
              - application/json
              responses:
                '200':
                  description: 200 response
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                '400':
                  description: 400 response
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Error'
                '500':
                  description: 500 response
                  headers:
                    Access-Control-Allow-Origin:
                      type: string
                  schema:
                    $ref: '#/definitions/Error'
              x-amazon-apigateway-integration:
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  BAD.*:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '400'
                  INT.*:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '500'
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: aws
                uri:
                  Fn::Sub: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:551307643672:function:${DisableUserFunction}/invocations
              x-amazon-apigateway-request-validator: Validate body
        schemes:
        - https
        swagger: '2.0'
        x-amazon-apigateway-request-validators:
          Validate body:
            validateRequestBody: true
            validateRequestParameters: false
      StageName: NFPBreastFeedingAPI
    Type: AWS::Serverless::Api
  DisableUserFunction:
    Properties:
      CodeUri: s3://serverlesssambucket123454321/b77564a1739cb4f8bdea05cbd8863ba0
      Events:
        disableuser:
          Properties:
            Method: POST
            Path: /cognito/disableuser
            RestApiId:
              Ref: Api
          Type: Api
      Handler: nfpbreastfeedingcognitouserdisable.cognito.ProxyWithStream::handleRequest
      Role:
        Fn::GetAtt:
        - IAMDisableUserFunctionRole
        - Arn
      Runtime: java8
    Type: AWS::Serverless::Function
  IAMDisableUserFunctionRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action: cognito-idp:AdminDisableUser
            Effect: Allow
            Resource: arn:aws:cognito-idp:us-east-1:*:userpool/*
          Version: '2012-10-17'
        PolicyName: DisableCognitoUser
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*"
          Version: '2012-10-17'
        PolicyName: LambdaBasicExecutionRole
    Type: AWS::IAM::Role
Transform: AWS::Serverless-2016-10-31
